{
	// Place your Cpp-days workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	"std_string": {
		"prefix": "str",
		"body": [
			"std::string"
		]
	},
	"include_string": {
		"prefix": "instr",
		"body": "#include <string>"
	},
	"include_iostream": {
		"prefix": "inio",
		"body": [
			"#include <iostream>"
		]
	},
	"main_no_arg": {
		"prefix": "maino",
		"body": [
			"int main()",
			"{",
			"\t$0",
			"}"
		]
	},
	"main": {
		"prefix": "main",
		"body": [
			"int main(int argc, char **argv)",
			"{",
			"\t$0",
			"}"
		]
	},
	"endl": {
		"prefix": "endl",
		"body": "std::endl"
	},
	"cout": {
		"prefix": "cout",
		"body": "std::cout << $0"
	},
	"cout endl": {
		"prefix": "cendl",
		"body": "std::cout << $0 << std::endl;"
	},
	"insert cout string":
	{
		"prefix": "icoutstring",
		"body": " << $0 << "
	},
	"pragma once": {
		"prefix": "pragma",
		"body": "#pragma once"
	}
	// "class": {
	// 	"prefix": "class",
	// 	"body": [
	// 		"class ${1:className} {",
	// 		"\tpublic:",
	// 		"\t$1();",
	// 		"\t~$1();",
	// 		"};"
	// 	]
	// }
}
